volumes:
  elastic-data:
    driver: local
  postgres-data:
    driver: local

services:
  postgresql:
    image: postgres:16.4
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
      POSTGRES_DB: ${DB_NAME:-products}
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data

  elasticsearch:
    image: elasticsearch:8.15.2
    restart: always
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - elastic-data:/usr/share/elasticsearch/data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9200" ]
      interval: 30s
      timeout: 10s
      retries: 5

  backend:
    build:
      context: ./product-service-backend
      dockerfile: Dockerfile
    restart: always
    environment:
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-password}
      - DB_NAME=${DB_NAME:-products}
      - DB_HOST=postgresql
      - DB_PORT=5432
      - ELASTIC_HOST=elasticsearch
      - ELASTIC_PORT=9200
    depends_on:
      postgresql:
        condition: service_started
      elasticsearch:
        condition: service_healthy
    ports:
      - 8080:8080

  frontend:
    build:
      context: ./products-service-frontend
      dockerfile: Dockerfile
    depends_on:
      - backend
    ports:
      - 3000:80
